<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyg.yucai.mapper.TBankMapper" >
  <resultMap id="BaseResultMap" type="com.hyg.yucai.model.TBank" >
    <id column="bankId" property="bankid" jdbcType="INTEGER" />
    <result column="bankName" property="bankname" jdbcType="VARCHAR" />
    <result column="bankno" property="bankno" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="editDate" property="editdate" jdbcType="TIMESTAMP" />
    <result column="founder" property="founder" jdbcType="VARCHAR" />
    <result column="standby_field_01" property="standbyField01" jdbcType="VARCHAR" />
    <result column="standby_field_02" property="standbyField02" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bankId, bankName, bankno, createDate, editDate, founder, standby_field_01, standby_field_02
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyg.yucai.model.TBankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <!-- 自定义 -->
  <select id="selectBankNameandNo" resultMap="BaseResultMap"  parameterType="com.hyg.yucai.model.TBankExample">
    select
    <if test="distinct" >
      distinct
    </if>
		bankName, bankno from t_bank
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <!--  -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_bank
    where bankId = #{bankid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_bank
    where bankId = #{bankid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyg.yucai.model.TBankExample" >
    delete from t_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyg.yucai.model.TBank" >
    insert into t_bank (bankId, bankName, bankno, 
      createDate, editDate, founder, 
      standby_field_01, standby_field_02)
    values (#{bankid,jdbcType=INTEGER}, #{bankname,jdbcType=VARCHAR}, #{bankno,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{editdate,jdbcType=TIMESTAMP}, #{founder,jdbcType=VARCHAR}, 
      #{standbyField01,jdbcType=VARCHAR}, #{standbyField02,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyg.yucai.model.TBank" >
    insert into t_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankid != null" >
        bankId,
      </if>
      <if test="bankname != null" >
        bankName,
      </if>
      <if test="bankno != null" >
        bankno,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="editdate != null" >
        editDate,
      </if>
      <if test="founder != null" >
        founder,
      </if>
      <if test="standbyField01 != null" >
        standby_field_01,
      </if>
      <if test="standbyField02 != null" >
        standby_field_02,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankid != null" >
        #{bankid,jdbcType=INTEGER},
      </if>
      <if test="bankname != null" >
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankno != null" >
        #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="editdate != null" >
        #{editdate,jdbcType=TIMESTAMP},
      </if>
      <if test="founder != null" >
        #{founder,jdbcType=VARCHAR},
      </if>
      <if test="standbyField01 != null" >
        #{standbyField01,jdbcType=VARCHAR},
      </if>
      <if test="standbyField02 != null" >
        #{standbyField02,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyg.yucai.model.TBankExample" resultType="java.lang.Integer" >
    select count(*) from t_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bank
    <set >
      <if test="record.bankid != null" >
        bankId = #{record.bankid,jdbcType=INTEGER},
      </if>
      <if test="record.bankname != null" >
        bankName = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.bankno != null" >
        bankno = #{record.bankno,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editdate != null" >
        editDate = #{record.editdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.founder != null" >
        founder = #{record.founder,jdbcType=VARCHAR},
      </if>
      <if test="record.standbyField01 != null" >
        standby_field_01 = #{record.standbyField01,jdbcType=VARCHAR},
      </if>
      <if test="record.standbyField02 != null" >
        standby_field_02 = #{record.standbyField02,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bank
    set bankId = #{record.bankid,jdbcType=INTEGER},
      bankName = #{record.bankname,jdbcType=VARCHAR},
      bankno = #{record.bankno,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      editDate = #{record.editdate,jdbcType=TIMESTAMP},
      founder = #{record.founder,jdbcType=VARCHAR},
      standby_field_01 = #{record.standbyField01,jdbcType=VARCHAR},
      standby_field_02 = #{record.standbyField02,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyg.yucai.model.TBank" >
    update t_bank
    <set >
      <if test="bankname != null" >
        bankName = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankno != null" >
        bankno = #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="editdate != null" >
        editDate = #{editdate,jdbcType=TIMESTAMP},
      </if>
      <if test="founder != null" >
        founder = #{founder,jdbcType=VARCHAR},
      </if>
      <if test="standbyField01 != null" >
        standby_field_01 = #{standbyField01,jdbcType=VARCHAR},
      </if>
      <if test="standbyField02 != null" >
        standby_field_02 = #{standbyField02,jdbcType=VARCHAR},
      </if>
    </set>
    where bankId = #{bankid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyg.yucai.model.TBank" >
    update t_bank
    set bankName = #{bankname,jdbcType=VARCHAR},
      bankno = #{bankno,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      editDate = #{editdate,jdbcType=TIMESTAMP},
      founder = #{founder,jdbcType=VARCHAR},
      standby_field_01 = #{standbyField01,jdbcType=VARCHAR},
      standby_field_02 = #{standbyField02,jdbcType=VARCHAR}
    where bankId = #{bankid,jdbcType=INTEGER}
  </update>
</mapper>